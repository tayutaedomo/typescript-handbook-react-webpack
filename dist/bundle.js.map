{"version":3,"sources":["webpack:///webpack/bootstrap e12179e917342ce846c8","webpack:///./src/index.tsx","webpack:///external \"React\"","webpack:///external \"ReactDOM\"","webpack:///./src/components/Hello.tsx"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA,oCAA+B;AAC/B,uCAAsC;AAEtC,sCAA2C;AAE3C,SAAQ,CAAC,MAAM,CACX,oBAAC,aAAK,IAAC,QAAQ,EAAC,YAAY,EAAC,SAAS,EAAC,OAAO,GAAG,EACjD,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CACrC,CAAC;;;;;;;ACRF,wB;;;;;;ACAA,2B;;;;;;;ACAA,oCAA+B;AAIlB,cAAK,GAAG,UAAC,KAAiB,IAAK;;KAAgB,KAAK,CAAC,QAAQ;;KAAO,KAAK,CAAC,SAAS;SAAO,EAA3D,CAA2D,CAAC;AAGxG,mCAAkC;AAClC,GAAE;AACF,wEAAuE;AACvE,GAAE;AACF,iDAAgD;AAChD,yDAAwD;AACxD,uEAAsE;AACtE,kBAAiB;AACjB,yFAAwF;AACxF,SAAQ;AACR,KAAI","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e12179e917342ce846c8","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { Hello } from \"./components/Hello\";\n\nReactDOM.render(\n    <Hello compiler=\"TypeScript\" framework=\"React\" />,\n    document.getElementById(\"example\")\n);\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx","module.exports = React;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 1\n// module chunks = 0","module.exports = ReactDOM;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ReactDOM\"\n// module id = 2\n// module chunks = 0","import * as React from \"react\";\n\nexport interface HelloProps { compiler: string; framework: string; }\n\nexport const Hello = (props: HelloProps) => <h1>Hello from {props.compiler} and {props.framework}!</h1>;\n\n\n// import * as React from \"react\";\n//\n// export interface HelloProps { compiler: string; framework: string; }\n//\n// // 'HelloProps' describes the shape of props.\n// // State is never set so we use the 'undefined' type.\n// export class Hello extends React.Component<HelloProps, undefined> {\n//     render() {\n//         return <h1>Hello from {this.props.compiler} and {this.props.framework}!</h1>;\n//     }\n// }\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Hello.tsx"],"sourceRoot":""}